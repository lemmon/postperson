#!/usr/bin/env node
const fs = require('fs').promises
const path = require('path')
const abrusco = require('abrusco-cli')
const { PurgeCSS } = require('purgecss')

const inputFile = path.resolve(__dirname, '../develop/index.html')
const outputFile = path.resolve(__dirname, '../public/index.html')

async function processCSS(input, html) {
  const purgeCSSResult = await new PurgeCSS().purge({
    content: [{ raw: html, extension: 'html' }],
    css: [{ raw: input }],
    defaultExtractor: content => content.match(/[\w-/:]+(?<!:)/g) || [],
    // variables: true,
  })
  const abruscoCSSResult = await abrusco(purgeCSSResult[0].css, {
    from: undefined,
    cssvars: false,
    minify: true,
  })
  return abruscoCSSResult.css
}

async function main() {
  // read input file
  await fs.readFile(inputFile, 'utf8')
    .then(html => (
      // remove whitespace
      html
        .replace(/^\s+/gm, '')
        .replace(/\n+/g, '')
    ))
    .then(html => (
      // process JS
      Promise.all([...html.matchAll(/<script src="([^"]+\.js)"><\/script>/g)].map(([m, href]) => (
        fs.readFile(path.resolve(path.dirname(outputFile), href), 'utf8')
      )))
        .then(x => x.join())
        .then(x => (
          x
            .replace(/(?<=\[)"\\n\s*",/g, '')
            .replace(/,"\\n\s*"(?=[\],])/g, '')
            .replace(/(?<=\w)\\n\s*(?=")/g, '')
        ))
        .then(x => (
          html
            .replace(/<script src="[^"]+\.js"><\/script>/g, '')
            .replace(/(?=<\/body>)/, `<script>${x}</script>`)
        ))
    ))
    .then(html => (
      // process CSS
      Promise.all([...html.matchAll(/<link rel="stylesheet" href="([^"]+\.css)">/g)].map(([m, href]) => (
        fs.readFile(path.resolve(path.dirname(inputFile), href), 'utf8')
      )))
        .then(x => x.join())
        .then(x => processCSS(x, html))
        .then(x => (
          html
            .replace(/<link rel="stylesheet" href="[^"]+\.css">/g, '')
            .replace(/(?=<\/head>)/, `<style>${x}</style>`)
        ))
    ))
    .then(x => (
      fs.writeFile(outputFile, x, 'utf8')
    ))
}

main().then(() => {
  console.log('index.html processed')
})
